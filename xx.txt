I see that you started hallucinating since a while ago. I will now give you our templates and you will start redoing them from slide 10 where you started hallucinating.

slide 10 - hasattr(), getattr(), setattr(), delattr()
Dynamically working with objects

Voice-over: metaprogramming hints

11 - int(), float(), str(), bool(), complex()
12 -list(), tuple(), set(), dict(), frozenset()
Differences vs literals ([], {}, etc.)
13 - repr(), ascii(), format()
14 - print() and input()
15 - reversed(), slice(), memoryview()
16 - help(), __import__()
17 - SKIP
18 - Common Pitfalls
eval() misuse

all([]) is True!

zip() truncation

19 -  Best Practices
When to use built-ins over libraries

Keeping code readable and idiomatic

20 - Built-in Function Cheat Sheet
Table: Name | Purpose | Safe to Use? | Common Use Case
21 - Glossary of Terms
Lazy evaluation, introspection, coercion, etc.
22 - Final Slide: Summary + Whatâ€™s Next
Where to go from here (deep-dives on individual ones?)
Download code samples

following those template:

10	hasattr() group	Template 1
11	int(), str(), float() conversions	Template 1
12	list(), dict() constructors	Template 1
13	repr(), ascii(), format()	Template 1
14	print() and input()	Template 1
15	reversed(), slice(), memoryview()	Template 1
16	help(), __import__()	Template 1
18	Common Pitfalls	Template 4
19	Best Practices	Template 1
20	Cheat Sheet	Template 5
21	Glossary	Template 6
22	Final Notes	Template 1 (Recap variant)